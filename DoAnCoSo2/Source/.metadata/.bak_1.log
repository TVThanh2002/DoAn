!SESSION 2021-12-02 08:35:19.896 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

This is a continuation of log file D:\Do an co so 2\Vu\.metadata\.bak_0.log
Created Time: 2021-12-02 10:13:20.867

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:13:20.867
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:13:20.873
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:24.361
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-02 10:13:24.362
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-02 10:13:24.362
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:24.379
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:13:24.380
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:13:24.380
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:26.992
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:13:26.993
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:13:26.993
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:37.914
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnB+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-02 10:13:37.914
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-02 10:13:37.915
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:37.973
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnB+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:13:37.974
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:13:37.974
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:39.432
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-02 10:13:39.433
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-02 10:13:39.433
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:39.450
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:13:39.451
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:13:39.452
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:43.977
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.te+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-02 10:13:43.978
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-02 10:13:43.978
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:44.029
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.te+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:13:44.030
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:13:44.031
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:45.496
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-02 10:13:45.496
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-02 10:13:45.496
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:45.513
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:13:45.514
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:13:45.514
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:49.101
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:13:49.102
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:13:49.102
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:55.022
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:13:55.023
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:13:55.023
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:56.055
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:13:56.055
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:13:56.056
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:56.075
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:13:56.076
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:13:56.076
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:56.188
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:13:56.188
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:13:56.189
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:57.186
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:13:57.187
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:13:57.187
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:58.344
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:13:58.345
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:13:58.345
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:58.440
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:13:58.441
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:13:58.441
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:14:29.036
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-02 10:14:29.037
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-02 10:14:29.037
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:14:29.053
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:14:29.053
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:14:29.054
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:14:29.069
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:14:29.070
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:14:29.071
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:14:29.099
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:14:29.099
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:14:29.100
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:14:29.115
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:14:29.115
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:14:29.116
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:14:29.131
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:14:29.132
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:14:29.132
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:14:29.149
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:14:29.150
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:14:29.150
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:14:29.165
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:14:29.166
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:14:29.166
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:14:29.183
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:14:29.183
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:14:29.184
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:251)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:386)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:362)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:14:36.296
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:14:36.297
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:14:36.297
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:14:36.311
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1052)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui 4 0 2021-12-02 10:14:36.312
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1052)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:14:37.251
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:14:37.254
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:14:37.255
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:14:37.269
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1052)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui 4 0 2021-12-02 10:14:37.269
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1052)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:14:44.253
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:14:44.253
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:14:44.254
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:14:47.317
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:14:47.318
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:14:47.319
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:14:48.025
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:439)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:366)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:326)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor249.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:319)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:253)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:584)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:653)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:443)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1270)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1042)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1094)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1519)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4882)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4760)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4930)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3624)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:14:48.026
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:439)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:366)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:326)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor249.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:319)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:253)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:584)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:653)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:443)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1270)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1042)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1094)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1519)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4882)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4760)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4930)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3624)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:14:48.026
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:439)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:366)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:326)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor249.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:319)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:253)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:584)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:653)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:443)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1270)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1042)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1094)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1519)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4882)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4760)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4930)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3624)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:14:50.448
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:14:50.449
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:14:50.450
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:14:50.462
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1052)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui 4 0 2021-12-02 10:14:50.462
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1052)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:14:50.525
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau='"+pnBangDau.tenBang+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:14:50.526
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:14:50.526
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.ui.ide 4 4 2021-12-02 20:22:48.758
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:253)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.access$16(DesignerPalette.java:249)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:321)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:373)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:289)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:205)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:198)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:416)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:146)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:585)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4742)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:468)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:263)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:241)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:125)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:766)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3243)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1881)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:330)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui.ide 4 4 2021-12-02 20:35:27.225
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:253)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.access$16(DesignerPalette.java:249)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:321)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:373)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:289)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:205)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:198)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:416)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:146)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:585)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4742)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:468)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:263)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:241)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:125)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:766)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3243)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1881)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:330)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui.ide 4 4 2021-12-02 20:40:47.822
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:253)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.access$16(DesignerPalette.java:249)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:321)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:373)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:289)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:205)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:198)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:416)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:146)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:585)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4742)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:468)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:263)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:241)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:125)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:766)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3243)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1881)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:330)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui 4 0 2021-12-02 20:47:10.965
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.reflect.UndeclaredThrowableException
	at jdk.proxy9/jdk.proxy9.$Proxy24.mouseMove(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor198.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.wb.internal.draw2d.EventManager$1.invoke(EventManager.java:317)
	... 29 more
Caused by: java.lang.ClassCastException: class org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy cannot be cast to class org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy (org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @4a45ae63; org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @462f1d85)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy.getLayoutEditPolicy(AbsoluteBasedSelectionEditPolicy.java:112)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy$1.showSourceFeedback(AbsoluteBasedSelectionEditPolicy.java:75)
	at org.eclipse.wb.gef.graphical.tools.ResizeTracker.handleDragInProgress(ResizeTracker.java:155)
	at org.eclipse.wb.gef.core.tools.Tool.mouseDrag(Tool.java:412)
	at org.eclipse.wb.gef.graphical.tools.SelectionTool.mouseDrag(SelectionTool.java:261)
	at org.eclipse.wb.internal.gef.core.EditDomain.mouseDrag(EditDomain.java:277)
	at org.eclipse.wb.internal.gef.graphical.EditEventManager.mouseMove(EditEventManager.java:168)
	... 33 more

!ENTRY org.eclipse.ui 4 0 2021-12-02 20:47:10.973
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.reflect.UndeclaredThrowableException
	at jdk.proxy9/jdk.proxy9.$Proxy24.mouseMove(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor198.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.wb.internal.draw2d.EventManager$1.invoke(EventManager.java:317)
	... 29 more
Caused by: java.lang.ClassCastException: class org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy cannot be cast to class org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy (org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @4a45ae63; org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @462f1d85)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy.getLayoutEditPolicy(AbsoluteBasedSelectionEditPolicy.java:112)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy$1.showSourceFeedback(AbsoluteBasedSelectionEditPolicy.java:75)
	at org.eclipse.wb.gef.graphical.tools.ResizeTracker.handleDragInProgress(ResizeTracker.java:155)
	at org.eclipse.wb.gef.core.tools.Tool.mouseDrag(Tool.java:412)
	at org.eclipse.wb.gef.graphical.tools.SelectionTool.mouseDrag(SelectionTool.java:261)
	at org.eclipse.wb.internal.gef.core.EditDomain.mouseDrag(EditDomain.java:277)
	at org.eclipse.wb.internal.gef.graphical.EditEventManager.mouseMove(EditEventManager.java:168)
	... 33 more

!ENTRY org.eclipse.ui 4 0 2021-12-02 20:47:10.983
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.reflect.UndeclaredThrowableException
	at jdk.proxy9/jdk.proxy9.$Proxy24.mouseMove(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor198.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.wb.internal.draw2d.EventManager$1.invoke(EventManager.java:317)
	... 29 more
Caused by: java.lang.ClassCastException: class org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy cannot be cast to class org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy (org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @4a45ae63; org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @462f1d85)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy.getLayoutEditPolicy(AbsoluteBasedSelectionEditPolicy.java:112)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy$1.showSourceFeedback(AbsoluteBasedSelectionEditPolicy.java:75)
	at org.eclipse.wb.gef.graphical.tools.ResizeTracker.handleDragInProgress(ResizeTracker.java:155)
	at org.eclipse.wb.gef.core.tools.Tool.mouseDrag(Tool.java:412)
	at org.eclipse.wb.gef.graphical.tools.SelectionTool.mouseDrag(SelectionTool.java:261)
	at org.eclipse.wb.internal.gef.core.EditDomain.mouseDrag(EditDomain.java:277)
	at org.eclipse.wb.internal.gef.graphical.EditEventManager.mouseMove(EditEventManager.java:168)
	... 33 more

!ENTRY org.eclipse.ui 4 0 2021-12-02 20:47:10.994
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.reflect.UndeclaredThrowableException
	at jdk.proxy9/jdk.proxy9.$Proxy24.mouseMove(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor198.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.wb.internal.draw2d.EventManager$1.invoke(EventManager.java:317)
	... 29 more
Caused by: java.lang.ClassCastException: class org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy cannot be cast to class org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy (org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @4a45ae63; org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @462f1d85)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy.getLayoutEditPolicy(AbsoluteBasedSelectionEditPolicy.java:112)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy$1.showSourceFeedback(AbsoluteBasedSelectionEditPolicy.java:75)
	at org.eclipse.wb.gef.graphical.tools.ResizeTracker.handleDragInProgress(ResizeTracker.java:155)
	at org.eclipse.wb.gef.core.tools.Tool.mouseDrag(Tool.java:412)
	at org.eclipse.wb.gef.graphical.tools.SelectionTool.mouseDrag(SelectionTool.java:261)
	at org.eclipse.wb.internal.gef.core.EditDomain.mouseDrag(EditDomain.java:277)
	at org.eclipse.wb.internal.gef.graphical.EditEventManager.mouseMove(EditEventManager.java:168)
	... 33 more

!ENTRY org.eclipse.ui 4 0 2021-12-02 20:47:11.003
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.reflect.UndeclaredThrowableException
	at jdk.proxy9/jdk.proxy9.$Proxy24.mouseMove(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor198.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.wb.internal.draw2d.EventManager$1.invoke(EventManager.java:317)
	... 29 more
Caused by: java.lang.ClassCastException: class org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy cannot be cast to class org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy (org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @4a45ae63; org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @462f1d85)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy.getLayoutEditPolicy(AbsoluteBasedSelectionEditPolicy.java:112)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy$1.showSourceFeedback(AbsoluteBasedSelectionEditPolicy.java:75)
	at org.eclipse.wb.gef.graphical.tools.ResizeTracker.handleDragInProgress(ResizeTracker.java:155)
	at org.eclipse.wb.gef.core.tools.Tool.mouseDrag(Tool.java:412)
	at org.eclipse.wb.gef.graphical.tools.SelectionTool.mouseDrag(SelectionTool.java:261)
	at org.eclipse.wb.internal.gef.core.EditDomain.mouseDrag(EditDomain.java:277)
	at org.eclipse.wb.internal.gef.graphical.EditEventManager.mouseMove(EditEventManager.java:168)
	... 33 more

!ENTRY org.eclipse.ui 4 0 2021-12-02 20:47:11.014
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.reflect.UndeclaredThrowableException
	at jdk.proxy9/jdk.proxy9.$Proxy24.mouseMove(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor198.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.wb.internal.draw2d.EventManager$1.invoke(EventManager.java:317)
	... 29 more
Caused by: java.lang.ClassCastException: class org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy cannot be cast to class org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy (org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @4a45ae63; org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @462f1d85)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy.getLayoutEditPolicy(AbsoluteBasedSelectionEditPolicy.java:112)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy$1.showSourceFeedback(AbsoluteBasedSelectionEditPolicy.java:75)
	at org.eclipse.wb.gef.graphical.tools.ResizeTracker.handleDragInProgress(ResizeTracker.java:155)
	at org.eclipse.wb.gef.core.tools.Tool.mouseDrag(Tool.java:412)
	at org.eclipse.wb.gef.graphical.tools.SelectionTool.mouseDrag(SelectionTool.java:261)
	at org.eclipse.wb.internal.gef.core.EditDomain.mouseDrag(EditDomain.java:277)
	at org.eclipse.wb.internal.gef.graphical.EditEventManager.mouseMove(EditEventManager.java:168)
	... 33 more

!ENTRY org.eclipse.ui 4 0 2021-12-02 20:47:11.024
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.reflect.UndeclaredThrowableException
	at jdk.proxy9/jdk.proxy9.$Proxy24.mouseMove(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor198.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.wb.internal.draw2d.EventManager$1.invoke(EventManager.java:317)
	... 29 more
Caused by: java.lang.ClassCastException: class org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy cannot be cast to class org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy (org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @4a45ae63; org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @462f1d85)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy.getLayoutEditPolicy(AbsoluteBasedSelectionEditPolicy.java:112)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy$1.showSourceFeedback(AbsoluteBasedSelectionEditPolicy.java:75)
	at org.eclipse.wb.gef.graphical.tools.ResizeTracker.handleDragInProgress(ResizeTracker.java:155)
	at org.eclipse.wb.gef.core.tools.Tool.mouseDrag(Tool.java:412)
	at org.eclipse.wb.gef.graphical.tools.SelectionTool.mouseDrag(SelectionTool.java:261)
	at org.eclipse.wb.internal.gef.core.EditDomain.mouseDrag(EditDomain.java:277)
	at org.eclipse.wb.internal.gef.graphical.EditEventManager.mouseMove(EditEventManager.java:168)
	... 33 more

!ENTRY org.eclipse.ui 4 0 2021-12-02 20:47:11.044
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.reflect.UndeclaredThrowableException
	at jdk.proxy9/jdk.proxy9.$Proxy24.mouseMove(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor198.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.wb.internal.draw2d.EventManager$1.invoke(EventManager.java:317)
	... 29 more
Caused by: java.lang.ClassCastException: class org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy cannot be cast to class org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy (org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @4a45ae63; org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @462f1d85)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy.getLayoutEditPolicy(AbsoluteBasedSelectionEditPolicy.java:112)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy$1.showSourceFeedback(AbsoluteBasedSelectionEditPolicy.java:75)
	at org.eclipse.wb.gef.graphical.tools.ResizeTracker.handleDragInProgress(ResizeTracker.java:155)
	at org.eclipse.wb.gef.core.tools.Tool.mouseDrag(Tool.java:412)
	at org.eclipse.wb.gef.graphical.tools.SelectionTool.mouseDrag(SelectionTool.java:261)
	at org.eclipse.wb.internal.gef.core.EditDomain.mouseDrag(EditDomain.java:277)
	at org.eclipse.wb.internal.gef.graphical.EditEventManager.mouseMove(EditEventManager.java:168)
	... 33 more

!ENTRY org.eclipse.ui 4 0 2021-12-02 20:47:11.062
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.reflect.UndeclaredThrowableException
	at jdk.proxy9/jdk.proxy9.$Proxy24.mouseMove(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor198.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.wb.internal.draw2d.EventManager$1.invoke(EventManager.java:317)
	... 29 more
Caused by: java.lang.ClassCastException: class org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy cannot be cast to class org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy (org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @4a45ae63; org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @462f1d85)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy.getLayoutEditPolicy(AbsoluteBasedSelectionEditPolicy.java:112)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy$1.showSourceFeedback(AbsoluteBasedSelectionEditPolicy.java:75)
	at org.eclipse.wb.gef.graphical.tools.ResizeTracker.handleDragInProgress(ResizeTracker.java:155)
	at org.eclipse.wb.gef.core.tools.Tool.mouseDrag(Tool.java:412)
	at org.eclipse.wb.gef.graphical.tools.SelectionTool.mouseDrag(SelectionTool.java:261)
	at org.eclipse.wb.internal.gef.core.EditDomain.mouseDrag(EditDomain.java:277)
	at org.eclipse.wb.internal.gef.graphical.EditEventManager.mouseMove(EditEventManager.java:168)
	... 33 more

!ENTRY org.eclipse.ui 4 0 2021-12-02 20:47:11.073
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.reflect.UndeclaredThrowableException
	at jdk.proxy9/jdk.proxy9.$Proxy24.mouseMove(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor198.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.wb.internal.draw2d.EventManager$1.invoke(EventManager.java:317)
	... 29 more
Caused by: java.lang.ClassCastException: class org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy cannot be cast to class org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy (org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @4a45ae63; org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @462f1d85)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy.getLayoutEditPolicy(AbsoluteBasedSelectionEditPolicy.java:112)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy$1.showSourceFeedback(AbsoluteBasedSelectionEditPolicy.java:75)
	at org.eclipse.wb.gef.graphical.tools.ResizeTracker.handleDragInProgress(ResizeTracker.java:155)
	at org.eclipse.wb.gef.core.tools.Tool.mouseDrag(Tool.java:412)
	at org.eclipse.wb.gef.graphical.tools.SelectionTool.mouseDrag(SelectionTool.java:261)
	at org.eclipse.wb.internal.gef.core.EditDomain.mouseDrag(EditDomain.java:277)
	at org.eclipse.wb.internal.gef.graphical.EditEventManager.mouseMove(EditEventManager.java:168)
	... 33 more

!ENTRY org.eclipse.ui 4 0 2021-12-02 20:47:11.082
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.reflect.UndeclaredThrowableException
	at jdk.proxy9/jdk.proxy9.$Proxy24.mouseMove(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor198.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.wb.internal.draw2d.EventManager$1.invoke(EventManager.java:317)
	... 29 more
Caused by: java.lang.ClassCastException: class org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy cannot be cast to class org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy (org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @4a45ae63; org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @462f1d85)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy.getLayoutEditPolicy(AbsoluteBasedSelectionEditPolicy.java:112)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy$1.showSourceFeedback(AbsoluteBasedSelectionEditPolicy.java:75)
	at org.eclipse.wb.gef.graphical.tools.ResizeTracker.handleDragInProgress(ResizeTracker.java:155)
	at org.eclipse.wb.gef.core.tools.Tool.mouseDrag(Tool.java:412)
	at org.eclipse.wb.gef.graphical.tools.SelectionTool.mouseDrag(SelectionTool.java:261)
	at org.eclipse.wb.internal.gef.core.EditDomain.mouseDrag(EditDomain.java:277)
	at org.eclipse.wb.internal.gef.graphical.EditEventManager.mouseMove(EditEventManager.java:168)
	... 33 more

!ENTRY org.eclipse.ui 4 0 2021-12-02 20:47:11.094
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.reflect.UndeclaredThrowableException
	at jdk.proxy9/jdk.proxy9.$Proxy24.mouseMove(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor198.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.wb.internal.draw2d.EventManager$1.invoke(EventManager.java:317)
	... 29 more
Caused by: java.lang.ClassCastException: class org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy cannot be cast to class org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy (org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @4a45ae63; org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @462f1d85)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy.getLayoutEditPolicy(AbsoluteBasedSelectionEditPolicy.java:112)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy$1.showSourceFeedback(AbsoluteBasedSelectionEditPolicy.java:75)
	at org.eclipse.wb.gef.graphical.tools.ResizeTracker.handleDragInProgress(ResizeTracker.java:155)
	at org.eclipse.wb.gef.core.tools.Tool.mouseDrag(Tool.java:412)
	at org.eclipse.wb.gef.graphical.tools.SelectionTool.mouseDrag(SelectionTool.java:261)
	at org.eclipse.wb.internal.gef.core.EditDomain.mouseDrag(EditDomain.java:277)
	at org.eclipse.wb.internal.gef.graphical.EditEventManager.mouseMove(EditEventManager.java:168)
	... 33 more

!ENTRY org.eclipse.ui 4 0 2021-12-02 20:47:11.112
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.reflect.UndeclaredThrowableException
	at jdk.proxy9/jdk.proxy9.$Proxy24.mouseMove(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor198.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.wb.internal.draw2d.EventManager$1.invoke(EventManager.java:317)
	... 29 more
Caused by: java.lang.ClassCastException: class org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy cannot be cast to class org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy (org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @4a45ae63; org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @462f1d85)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy.getLayoutEditPolicy(AbsoluteBasedSelectionEditPolicy.java:112)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy$1.showSourceFeedback(AbsoluteBasedSelectionEditPolicy.java:75)
	at org.eclipse.wb.gef.graphical.tools.ResizeTracker.handleDragInProgress(ResizeTracker.java:155)
	at org.eclipse.wb.gef.core.tools.Tool.mouseDrag(Tool.java:412)
	at org.eclipse.wb.gef.graphical.tools.SelectionTool.mouseDrag(SelectionTool.java:261)
	at org.eclipse.wb.internal.gef.core.EditDomain.mouseDrag(EditDomain.java:277)
	at org.eclipse.wb.internal.gef.graphical.EditEventManager.mouseMove(EditEventManager.java:168)
	... 33 more

!ENTRY org.eclipse.ui 4 0 2021-12-02 20:47:11.122
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.reflect.UndeclaredThrowableException
	at jdk.proxy9/jdk.proxy9.$Proxy24.mouseMove(Unknown Source)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor198.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.wb.internal.draw2d.EventManager$1.invoke(EventManager.java:317)
	... 29 more
Caused by: java.lang.ClassCastException: class org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy cannot be cast to class org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy (org.eclipse.wb.internal.swing.gef.policy.layout.BorderLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @4a45ae63; org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedLayoutEditPolicy is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @462f1d85)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy.getLayoutEditPolicy(AbsoluteBasedSelectionEditPolicy.java:112)
	at org.eclipse.wb.internal.core.gef.policy.layout.absolute.AbsoluteBasedSelectionEditPolicy$1.showSourceFeedback(AbsoluteBasedSelectionEditPolicy.java:75)
	at org.eclipse.wb.gef.graphical.tools.ResizeTracker.handleDragInProgress(ResizeTracker.java:155)
	at org.eclipse.wb.gef.core.tools.Tool.mouseDrag(Tool.java:412)
	at org.eclipse.wb.gef.graphical.tools.SelectionTool.mouseDrag(SelectionTool.java:261)
	at org.eclipse.wb.internal.gef.core.EditDomain.mouseDrag(EditDomain.java:277)
	at org.eclipse.wb.internal.gef.graphical.EditEventManager.mouseMove(EditEventManager.java:168)
	... 33 more
