!SESSION 2021-11-19 20:01:22.303 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2021-11-19 20:02:47.751
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-19 20:02:47.751
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57f1fbae,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@28901fe7,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2021-11-19 20:02:53.922
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2021-11-19 20:02:53.924
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2021-11-19 20:02:53.952
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\tranv'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-19 20:55:37.187 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2021-11-19 20:55:44.040
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-19 20:55:44.040
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@244c0fbe,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@68aa1164,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2021-11-19 20:55:51.755
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2021-11-19 20:55:51.757
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2021-11-19 20:55:51.810
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\tranv'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-20 08:47:29.730 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2021-11-20 08:47:37.035
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-20 08:47:37.035
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1f5a1ad4,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7866ffa,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2021-11-20 08:47:43.546
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2021-11-20 08:47:43.547
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2021-11-20 08:47:43.610
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\tranv'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-20 14:42:33.592 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2021-11-20 14:42:44.763
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-20 14:42:44.763
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@44ac94c2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@19b33b0d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2021-11-20 14:42:51.690
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2021-11-20 14:42:51.691
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2021-11-20 14:42:51.726
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\tranv'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-20 20:33:32.012 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2021-11-20 20:33:43.747
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-20 20:33:43.747
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3857c5d5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@237824b0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2021-11-20 20:33:52.680
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2021-11-20 20:33:52.681
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2021-11-20 20:33:52.730
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\tranv'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-21 20:05:06.443 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2021-11-21 20:05:20.729
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-21 20:05:20.729
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@524b1e41,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2da8ed80,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2021-11-21 20:05:26.069
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2021-11-21 20:05:26.070
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2021-11-21 20:05:26.114
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\tranv'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui 4 0 2021-11-21 21:33:52.187
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)
	at java.base/java.util.Objects.checkIndex(Objects.java:359)
	at java.base/java.util.ArrayList.get(ArrayList.java:427)
	at java.base/java.util.Collections$SynchronizedList.get(Collections.java:2460)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1419)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$ProposalSelectionListener.keyReleased(CompletionProposalPopup.java:253)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:178)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1094)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.wmKeyUp(Widget.java:1835)
	at org.eclipse.swt.widgets.Control.WM_KEYUP(Control.java:5173)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4793)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4938)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3624)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)
!SESSION 2021-11-28 09:00:27.847 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2021-11-28 09:00:45.088
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-28 09:00:45.088
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2da8ed80,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@d827673,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2021-11-28 09:00:53.380
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2021-11-28 09:00:53.381
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2021-11-28 09:00:53.449
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\tranv'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui.ide 4 4 2021-11-28 10:45:01.936
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:253)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.access$16(DesignerPalette.java:249)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:321)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:373)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:289)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:205)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:198)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:416)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:146)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:585)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4742)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:468)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:263)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:241)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:125)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:766)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3243)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1881)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:330)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)
!SESSION 2021-11-29 20:01:43.661 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2021-11-29 20:01:54.539
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-29 20:01:54.539
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6a9d572,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a5df98c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-29 20:02:00.726
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\tranv'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui.navigator 2 0 2021-11-29 20:12:38.123
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2021-11-29 20:12:38.124
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.ide 4 4 2021-11-29 20:19:35.316
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:253)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.access$16(DesignerPalette.java:249)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:321)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:373)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:289)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:205)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:198)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:416)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:146)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:585)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4742)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:468)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:263)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:241)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:125)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:766)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3243)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1881)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:330)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2021-11-29 20:21:25.920
!MESSAGE 
!STACK 0
java.lang.NullPointerException: Cannot invoke "org.eclipse.ui.texteditor.ITextEditor.isDirty()" because "this.fTextEditor" is null
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7165)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3447)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3420)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2021-11-29 20:22:19.176
!MESSAGE 
!STACK 0
java.lang.NullPointerException: Cannot invoke "org.eclipse.ui.texteditor.ITextEditor.isDirty()" because "this.fTextEditor" is null
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7165)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3447)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3420)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2021-11-29 20:27:31.340
!MESSAGE 
!STACK 0
java.lang.NullPointerException: Cannot invoke "org.eclipse.ui.texteditor.ITextEditor.isDirty()" because "this.fTextEditor" is null
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7165)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3447)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3420)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2021-11-29 20:39:32.345
!MESSAGE 
!STACK 0
java.lang.NullPointerException: Cannot invoke "org.eclipse.ui.texteditor.ITextEditor.isDirty()" because "this.fTextEditor" is null
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7165)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3447)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3420)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui.ide 4 4 2021-11-29 20:42:53.768
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:253)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.access$16(DesignerPalette.java:249)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:321)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:373)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:289)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:205)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:198)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:416)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:146)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:585)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4742)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:468)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:263)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:241)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:125)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:766)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3243)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1881)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:330)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui.ide 4 4 2021-11-29 20:47:20.931
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:253)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.access$16(DesignerPalette.java:249)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:321)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:373)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:289)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:205)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:198)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:416)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:146)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:585)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4742)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:468)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.DesignPage$4.run(DesignPage.java:285)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.DesignPage.checkDependenciesOnDesignPageActivation(DesignPage.java:280)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$3(DesignPage.java:278)
	at org.eclipse.wb.internal.core.editor.DesignPage$1$1.run(DesignPage.java:105)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils$4.run(ExecutionUtils.java:203)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui.ide 4 4 2021-11-29 20:47:53.707
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:253)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.access$16(DesignerPalette.java:249)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:321)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:373)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:289)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:205)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:198)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:416)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:146)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:585)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4742)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:468)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage$1$1.run(DesignPage.java:107)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils$4.run(ExecutionUtils.java:203)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui.ide 4 4 2021-11-29 20:48:27.582
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:253)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.access$16(DesignerPalette.java:249)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:321)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:373)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:289)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:205)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:198)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:416)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:146)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:585)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4742)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:468)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:263)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:241)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:125)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:766)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3243)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1881)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:330)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2021-11-29 21:36:39.018
!MESSAGE 
!STACK 0
java.lang.NullPointerException: Cannot invoke "org.eclipse.ui.texteditor.ITextEditor.isDirty()" because "this.fTextEditor" is null
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7165)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3447)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3420)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2021-11-29 21:38:10.106
!MESSAGE 
!STACK 0
java.lang.NullPointerException: Cannot invoke "org.eclipse.ui.texteditor.ITextEditor.isDirty()" because "this.fTextEditor" is null
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7165)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3447)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3420)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui.ide 4 4 2021-11-29 21:39:32.651
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:253)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.access$16(DesignerPalette.java:249)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:321)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:373)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:289)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:205)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:198)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:416)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:146)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:585)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4742)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:468)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:330)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui.ide 4 4 2021-11-29 21:39:45.862
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:253)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.access$16(DesignerPalette.java:249)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:321)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:373)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:289)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:205)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:198)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:416)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:146)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:585)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4742)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:468)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:263)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:241)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:125)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:766)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3243)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1881)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:330)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2021-11-29 21:41:24.129
!MESSAGE 
!STACK 0
java.lang.NullPointerException: Cannot invoke "org.eclipse.ui.texteditor.ITextEditor.isDirty()" because "this.fTextEditor" is null
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7165)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3447)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3420)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui.ide 4 4 2021-11-29 21:43:33.955
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:253)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.access$16(DesignerPalette.java:249)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:321)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:373)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:289)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:205)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:198)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:416)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:146)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:585)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4742)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:468)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:263)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:241)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:125)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:766)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3243)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1881)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:330)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui.ide 4 4 2021-11-29 21:43:42.062
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:253)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.access$16(DesignerPalette.java:249)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:321)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:373)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:289)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:205)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:198)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:416)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:146)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:585)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4742)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:468)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:263)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:241)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:125)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:766)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3243)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1881)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:330)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui.ide 4 4 2021-11-29 21:44:14.118
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:253)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.access$16(DesignerPalette.java:249)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:321)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:373)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:289)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:205)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:198)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:416)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:146)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:585)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4742)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:468)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:263)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:241)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:125)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:766)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3243)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1881)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:330)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui.ide 4 4 2021-11-29 21:44:33.720
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:253)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.access$16(DesignerPalette.java:249)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:321)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:373)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:289)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:205)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:198)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:416)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:146)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:585)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4742)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:468)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:263)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:241)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:125)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:766)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3243)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1881)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:330)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)

!ENTRY org.eclipse.ui.ide 4 4 2021-11-29 21:46:44.048
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:253)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.access$16(DesignerPalette.java:249)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:321)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:373)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:289)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:205)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:198)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:416)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:146)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:585)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4742)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:468)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:263)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:241)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:125)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:766)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3243)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1881)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:330)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1435)
!SESSION 2021-12-01 21:56:26.471 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2021-12-01 21:56:36.648
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-01 21:56:36.648
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@55ba4bff,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3705a85c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2021-12-01 21:56:42.371
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2021-12-01 21:56:42.374
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2021-12-01 21:56:42.443
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\tranv'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-02 08:35:19.896 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2021-12-02 08:35:28.685
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-02 08:35:28.685
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@46ae897c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@44846c76,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2021-12-02 08:35:36.344
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2021-12-02 08:35:36.345
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2021-12-02 08:35:36.401
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\tranv'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:11:20.102
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-02 10:11:20.112
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-02 10:11:20.113
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:11:20.148
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:11:20.149
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:11:20.150
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:11:22.142
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:11:22.143
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:11:22.144
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:11:25.555
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:11:25.556
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:11:25.557
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:11:26.867
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:11:26.868
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:11:26.868
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:11:29.726
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:11:29.727
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:11:29.728
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:11:32.496
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:11:32.497
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:11:32.497
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:11:33.344
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:11:33.345
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:11:33.345
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:11:33.379
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:11:33.380
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:11:33.380
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:11:35.384
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:11:35.385
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:11:35.386
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:11:35.421
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:11:35.422
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:11:35.422
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:11:59.994
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:11:59.995
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:11:59.995
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:12:23.171
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:12:23.172
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:12:23.172
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:12:24.045
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:12:24.046
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:12:24.047
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:12:24.124
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:12:24.125
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:12:24.125
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:12:26.810
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:12:26.811
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:12:26.811
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:12:26.883
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:12:26.884
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:12:26.884
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:12:29.109
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:12:29.110
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:12:29.110
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:12:29.183
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:12:29.185
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:12:29.185
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:12:36.039
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:12:36.040
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:12:36.041
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:12:36.115
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:12:36.116
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:12:36.116
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:12:37.495
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:12:37.495
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:12:37.496
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:12:44.196
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + ""+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-02 10:12:44.197
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-02 10:12:44.198
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:12:44.220
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + ""+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:12:44.222
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:12:44.222
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:12:45.645
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + ""+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:12:45.646
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:12:45.646
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:12:45.721
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + ""+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:12:45.721
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:12:45.722
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:12:49.216
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND "+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-02 10:12:49.217
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-02 10:12:49.218
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:12:49.236
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND "+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:12:49.237
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:12:49.237
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:01.242
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau"+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-02 10:13:01.242
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-02 10:13:01.243
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:01.259
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau"+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:13:01.260
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:13:01.260
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:02.259
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau."+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-02 10:13:02.260
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-02 10:13:02.260
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:02.282
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau."+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:13:02.283
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:13:02.284
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:07.481
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau."+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:13:07.483
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:13:07.484
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:07.503
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau."+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:13:07.503
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:13:07.503
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:08.792
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.D"+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-02 10:13:08.793
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-02 10:13:08.794
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:11.818
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau"+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-02 10:13:11.820
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-02 10:13:11.820
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:11.847
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau"+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-02 10:13:11.848
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-02 10:13:11.848
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:20.842
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau="+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-02 10:13:20.843
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-02 10:13:20.843
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-02 10:13:20.866
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package GiaoDien;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import DBKetNoi.DBConnect;
import ObjectDoiBong.XepHang;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;

public class QuanLy extends JPanel implements ActionListener{
	//DBConnect dbconnect;
	GiaiDau pnGiaiDau;
	DoiBong pnDoiBong;
	TrongTai pnTrongTai;
	San pnSan;
	BangDau pnBangDau;
	TranDau pnTranDau;
	ChiTietBangDau pnChiTietBangDau;
	TranDau_Bang pnLichBang;
	JPanel panel_2;
	JButton btnGiaiDau;
	JButton btnDoiBong;
	JButton btnBangDau;
	JButton btnTranDau; 
	JButton btnSan;
	JButton btnTrongTai;
	CardLayout card;
	DanhSachCauThu pnDanhSachCT;
	/**
	 * Create the panel.
	 */
	public QuanLy(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 222));
		setSize(980, 680);
		setLayout(new BorderLayout(0, 0));
		JPanel panel = new JPanel();
		add(panel, BorderLayout.NORTH);
		
		JLabel titleGiaiDau = new JLabel();
		titleGiaiDau.setIcon(new ImageIcon("img\\backgroundGiaiDau.jpg"));
		titleGiaiDau.setFont(new Font("Tahoma", Font.BOLD, 20));
		panel.add(titleGiaiDau);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.getHSBColor(255, 250, 150));
		add(panel_1, BorderLayout.WEST);
		
		JPanel panel_3 = new JPanel();
		panel_3.setBackground(Color.getHSBColor(255, 250, 150));
		GroupLayout gl_panel_1 = new GroupLayout(panel_1);
		gl_panel_1.setHorizontalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addContainerGap()
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		gl_panel_1.setVerticalGroup(
			gl_panel_1.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_1.createSequentialGroup()
					.addGap(36)
					.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 386, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(98, Short.MAX_VALUE))
		);
		panel_3.setLayout(new GridLayout(0, 1, 0, 20));
		
		btnGiaiDau = new JButton("Giải đấu");
		btnGiaiDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnGiaiDau);
		
		btnDoiBong = new JButton("Đội bóng");
		btnDoiBong.setBackground(new Color(100, 240, 250));
		panel_3.add(btnDoiBong);
		
		btnSan = new JButton("Sân ");
		btnSan.setBackground(new Color(100, 240, 250));
		panel_3.add(btnSan);
		
		btnBangDau = new JButton("Bảng đấu");
		btnBangDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnBangDau);
		
		btnTranDau = new JButton("Trận đấu");
		btnTranDau.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTranDau);
		
		btnTrongTai = new JButton("Trọng tài");
		btnTrongTai.setBackground(new Color(100, 240, 250));
		panel_3.add(btnTrongTai);
		panel_1.setLayout(gl_panel_1);
		
		card = new CardLayout();
		panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		add(panel_2, BorderLayout.CENTER);
		panel_2.setLayout(card);
		
		pnGiaiDau = new GiaiDau(dbconnect);
		panel_2.add("name_GiaiDau",pnGiaiDau);
		
		pnDoiBong = new DoiBong(dbconnect);
		panel_2.add("name_DoiBong",pnDoiBong);
		
		pnSan = new San(dbconnect);
		panel_2.add("name_San",pnSan);
		
		pnTrongTai = new TrongTai(dbconnect);
		panel_2.add("name_TrongTai",pnTrongTai);
		
		pnBangDau = new BangDau(dbconnect);
		panel_2.add("name_BangDau",pnBangDau);
		
		pnChiTietBangDau = new ChiTietBangDau(dbconnect);
		panel_2.add("name_ChiTietBangDau",pnChiTietBangDau);
		
		pnTranDau = new TranDau(dbconnect);
		panel_2.add("name_TranDau",pnTranDau);
		
		pnLichBang = new TranDau_Bang(dbconnect);
		panel_2.add("name_LichBang",pnLichBang);
		
		pnDanhSachCT = new DanhSachCauThu(dbconnect);
		panel_2.add("name_DanhSachCT",pnDanhSachCT);
		
		batSukien(dbconnect);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	public void batSukien(DBConnect dbconnect) {
		btnGiaiDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_GiaiDau");
			}
		});
		
		btnDoiBong.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_DoiBong");
					pnDoiBong.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
				}
				EventDoiBong(dbconnect);
			}
		});
		
		pnDoiBong.btnCauThu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnDoiBong.maDoi==null) {
					JOptionPane.showMessageDialog(null, "Chọn đội bóng để xem cầu thủ");
				}
				else {
					card.show(panel_2, "name_DanhSachCT");
					pnDanhSachCT.lblTitle.setText("Đội Bóng: "+pnDoiBong.tenDoi);
					EventCauThu(dbconnect);
				}
			}
		});
		btnBangDau.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_BangDau");		
					pnBangDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventBangDau(dbconnect);
				}
			}
		});
		btnSan.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_San");				
				}
			}
		});
		
		btnTrongTai.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TrongTai");
				}
			}
		});
		pnBangDau.btnXemChiTiet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
		pnChiTietBangDau.btnLichThiDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				card.show(panel_2, "name_LichBang");
				pnLichBang.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
				EventLichBang(dbconnect);
			}
		});
		
		btnTranDau.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnGiaiDau.maGiai==null) {
					JOptionPane.showMessageDialog(null, "Chọn giải đấu mà bạn cần quản lý trước khi thực hiện các chức năng");
				}
				else {
					card.show(panel_2, "name_TranDau");
					pnTranDau.lblTitle.setText("Giải đấu: "+pnGiaiDau.tenGiai);
					EventTranDau(dbconnect);
				}
			}
		});
		
		pnLichBang.btnThoat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(pnBangDau.maBang==null) {
					JOptionPane.showMessageDialog(null, "Chọn bảng đấu");
				}
				else {
					card.show(panel_2, "name_ChiTietBangDau");
					pnChiTietBangDau.lblTitle.setText("Bảng đấu: "+pnBangDau.tenBang);
					EventChiTietBangDau(dbconnect);
					XepHang.XepHang(dbconnect);
				}
			}
		});
	}
	public void EventDoiBong(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,HLV,DoiTruong FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnDoiBong.modelDoiBong.setNumRows(0);
			while(rs.next()) {
				pnDoiBong.modelDoiBong.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
			}
			pnDoiBong.txtMaDoi.setText("");
			pnDoiBong.txtTenDoi.setText("");
			pnDoiBong.txtDoiTruong.setText("");
			pnDoiBong.txtHLV.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnBangDau.modelBangDau.setNumRows(0);
			while(rs.next()) {
				pnBangDau.modelBangDau.addRow(new String[] {rs.getString(1),rs.getString(2)});
			}
			pnBangDau.txtMaBang.setText("");
			pnBangDau.txtTenBang.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void EventChiTietBangDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnChiTietBangDau.cbbDoiBong.addItem(rs.getString(1));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	public void EventTranDau(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery(
					"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
							+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang,BangDau FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			pnTranDau.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnTranDau.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9)});
			}
			pnTranDau.cbbDoi1.removeAllItems();
			pnTranDau.cbbDoi2.removeAllItems();
			pnTranDau.cbbBangDau.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM DoiBong WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbDoi1.addItem(rs.getString(1));
				pnTranDau.cbbDoi2.addItem(rs.getString(1));
			}
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM BangDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbBangDau.addItem(rs.getString(1));
			}
			pnTranDau.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+pnGiaiDau.maGiai+"'");
			while(rs.next()) {
				pnTranDau.cbbSan.addItem(rs.getString(1));
			}
			pnTranDau.txtThoiGian.setText("");
			pnTranDau.txtBanThang1.setText("");
			pnTranDau.txtBanThang2.setText("");
			pnTranDau.txtMaTran.setText("");
			pnTranDau.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventLichBang(DBConnect dbconnect) {
		try {
			"SELECT TranDau.ID,TranDau.thoigian,TranDau.san,A.ten,TranDau.banthang1,B.ten,TranDau.banthang2,TranDau.tinhtrang,TranDau.BangDau FROM TranDau, DoiBong A, DoiBong B WHERE TranDau.GiaiDau ='"
					+ pnGiaiDau.maGiai + "AND TranDau.GiaiDau="+"' AND A.GiaiDau ='" + pnGiaiDau.maGiai + "' AND B.GiaiDau ='"
					+ pnGiaiDau.maGiai + "' AND A.ID = TranDau.doi1 AND B.ID = TranDau.doi2");
			//ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,thoigian,san,doi1,banthang1,doi2,banthang2,tinhtrang FROM TranDau WHERE GiaiDau='"+pnGiaiDau.maGiai+"' AND BangDau='"+pnBangDau.tenBang+"'");
			pnLichBang.modelTranDau.setNumRows(0);
			while(rs.next()) {
				pnLichBang.modelTranDau.addRow(new String [] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8)});
			}
			pnLichBang.cbbDoi1.removeAllItems();
			pnLichBang.cbbDoi2.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM XepHang WHERE bangDau='"+BangDau.maBang+"'");
			while(rs.next()) {
				pnLichBang.cbbDoi1.addItem(rs.getString(1));
				pnLichBang.cbbDoi2.addItem(rs.getString(1));
			}
			pnLichBang.cbbSan.removeAllItems();
			rs = dbconnect.getStmt().executeQuery("SELECT ten FROM San WHERE GiaiDau='"+GiaiDau.maGiai+"'");
			while(rs.next()) {
				pnLichBang.cbbSan.addItem(rs.getString(1));
			}
			pnLichBang.txtThoiGian.setText("");
			pnLichBang.txtBanThang1.setText("");
			pnLichBang.txtBanThang2.setText("");
			pnLichBang.txtMaTran.setText("");
			pnLichBang.txtThoiGian.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void EventCauThu(DBConnect dbconnect) {
		try {
			ResultSet rs = dbconnect.getStmt().executeQuery("SELECT ID,ten,ngaySinh,soAo,viTri FROM CauThu WHERE DoiBong='"+pnDoiBong.maDoi+"'");
			pnDanhSachCT.modelCauThu.setNumRows(0);
			while(rs.next()) {
				pnDanhSachCT.modelCauThu.addRow(new String[] {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
			}
			pnDanhSachCT.txtIDCT.setText("");
			pnDanhSachCT.txtTenCT.setText("");
			pnDanhSachCT.txtNgaySinh.setText("");
			pnDanhSachCT.txtSoAo.setText("");
			pnDanhSachCT.txtViTri.setText("");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3235)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3012)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
