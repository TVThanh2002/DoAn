package GiaoDien;

import javax.swing.JPanel;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.SQLException;

import javax.swing.JTextField;
import javax.swing.JComboBox;
import javax.swing.JCheckBox;
import javax.swing.JButton;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.table.DefaultTableModel;

import DBKetNoi.DBConnect;

import javax.swing.JTable;

public class TranDau_Bang extends JPanel {
	private JTextField txtMaTran;
	private JTextField txtThoiGian;
	private JTextField txtBanThang1;
	private JTextField txtBanThang2;
	private JTable table;
	JButton btnThem, btnXoa, btnCapNhat,btnThoat;
	JComboBox cbbDoi1, cbbDoi2;
	JComboBox cbbSan;
	JCheckBox checkTinhTrang;
	JLabel lblTitle;
	String HEARD[] = new String[] {"Mã trận","Thời gian","Sân","Đội 1","Bàn thắng đội 1","Đội 2","Bàn thắng đội 2","Tình trạng"};
	DefaultTableModel modelTranDau = new DefaultTableModel();
	int row =-1;
	/**
	 * Create the panel.
	 */
	public TranDau_Bang(DBConnect dbconnect) {
		setBackground(Color.getHSBColor(222, 222, 229));
		setSize(767,520);
		
		lblTitle = new JLabel("Bảng:");
		lblTitle.setFont(new Font("Tahoma", Font.BOLD, 20));
		
		JScrollPane scrollPane_1 = new JScrollPane();
		
		JPanel panel = new JPanel();
		panel.setBackground(Color.getHSBColor(222, 222, 229));;
		panel.setLayout(new GridLayout(0, 2, 0, 20));
		
		JLabel lblNewLabel = new JLabel("Mã trận:");
		lblNewLabel.setFont(new Font("Tahoma", Font.PLAIN, 16));
		panel.add(lblNewLabel);
		
		txtMaTran = new JTextField();
		txtMaTran.setColumns(10);
		panel.add(txtMaTran);
		
		JLabel lblNewLabel_1 = new JLabel("Đội 1:");
		lblNewLabel_1.setFont(new Font("Tahoma", Font.PLAIN, 16));
		panel.add(lblNewLabel_1);
		
		cbbDoi1 = new JComboBox();
		panel.add(cbbDoi1);
		
		JLabel lblNewLabel_2 = new JLabel("Đội 2:");
		lblNewLabel_2.setFont(new Font("Tahoma", Font.PLAIN, 16));
		panel.add(lblNewLabel_2);
		
		cbbDoi2 = new JComboBox();
		panel.add(cbbDoi2);
		
		JLabel lblNewLabel_3 = new JLabel("Thời gian:");
		lblNewLabel_3.setFont(new Font("Tahoma", Font.PLAIN, 16));
		panel.add(lblNewLabel_3);
		
		txtThoiGian = new JTextField();
		txtThoiGian.setColumns(10);
		panel.add(txtThoiGian);
		
		JLabel lblNewLabel_4 = new JLabel("Sân:");
		lblNewLabel_4.setFont(new Font("Tahoma", Font.PLAIN, 16));
		panel.add(lblNewLabel_4);
		
		checkTinhTrang = new JCheckBox("Đã thi đấu");
		checkTinhTrang.setFont(new Font("Tahoma", Font.PLAIN, 16));
		checkTinhTrang.setBackground(Color.GREEN);
		
		JPanel panel_2 = new JPanel();
		panel_2.setBackground(Color.GREEN);
		panel_2.setLayout(new GridLayout(0, 2, 0, 20));
		
		JLabel lblNewLabel_5 = new JLabel("Bàn thắng 1:");
		lblNewLabel_5.setFont(new Font("Tahoma", Font.PLAIN, 16));
		panel_2.add(lblNewLabel_5);
		
		txtBanThang1 = new JTextField();
		txtBanThang1.setColumns(10);
		panel_2.add(txtBanThang1);
		
		JLabel lblNewLabel_6 = new JLabel("Bàn thắng 2:");
		lblNewLabel_6.setFont(new Font("Tahoma", Font.PLAIN, 16));
		panel_2.add(lblNewLabel_6);
		
		txtBanThang2 = new JTextField();
		txtBanThang2.setColumns(10);
		panel_2.add(txtBanThang2);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.GREEN);
		panel_1.setLayout(new GridLayout(0, 1, 0, 15));
		
		btnThem = new JButton("Thêm");
		btnThem.setFont(new Font("Tahoma", Font.PLAIN, 14));
		panel_1.add(btnThem);
		
		btnCapNhat = new JButton("Cập nhật");
		btnCapNhat.setFont(new Font("Tahoma", Font.PLAIN, 14));
		panel_1.add(btnCapNhat);
		
		btnXoa = new JButton("Xóa");
		btnXoa.setFont(new Font("Tahoma", Font.PLAIN, 14));
		panel_1.add(btnXoa);
		GroupLayout groupLayout = new GroupLayout(this);
		groupLayout.setHorizontalGroup(
			groupLayout.createParallelGroup(Alignment.TRAILING)
				.addGroup(groupLayout.createSequentialGroup()
					.addContainerGap(49, Short.MAX_VALUE)
					.addGroup(groupLayout.createParallelGroup(Alignment.TRAILING)
						.addGroup(groupLayout.createSequentialGroup()
							.addComponent(lblTitle, GroupLayout.PREFERRED_SIZE, 276, GroupLayout.PREFERRED_SIZE)
							.addGap(218))
						.addGroup(groupLayout.createSequentialGroup()
							.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
								.addComponent(scrollPane_1, GroupLayout.PREFERRED_SIZE, 671, GroupLayout.PREFERRED_SIZE)
								.addGroup(groupLayout.createSequentialGroup()
									.addComponent(panel, GroupLayout.PREFERRED_SIZE, 310, GroupLayout.PREFERRED_SIZE)
									.addPreferredGap(ComponentPlacement.UNRELATED)
									.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
										.addComponent(panel_2, GroupLayout.PREFERRED_SIZE, 201, GroupLayout.PREFERRED_SIZE)
										.addGroup(groupLayout.createSequentialGroup()
											.addGap(48)
											.addComponent(checkTinhTrang, GroupLayout.PREFERRED_SIZE, 110, GroupLayout.PREFERRED_SIZE)))
									.addGap(18)
									.addComponent(panel_1, GroupLayout.PREFERRED_SIZE, 132, GroupLayout.PREFERRED_SIZE)))
							.addGap(47))))
		);
		groupLayout.setVerticalGroup(
			groupLayout.createParallelGroup(Alignment.LEADING)
				.addGroup(groupLayout.createSequentialGroup()
					.addContainerGap()
					.addComponent(lblTitle, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
					.addGroup(groupLayout.createParallelGroup(Alignment.TRAILING, false)
						.addGroup(groupLayout.createSequentialGroup()
							.addComponent(panel_2, GroupLayout.PREFERRED_SIZE, 77, GroupLayout.PREFERRED_SIZE)
							.addGap(32)
							.addComponent(checkTinhTrang, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)
							.addGap(39))
						.addComponent(panel, GroupLayout.PREFERRED_SIZE, 232, GroupLayout.PREFERRED_SIZE)
						.addGroup(groupLayout.createSequentialGroup()
							.addComponent(panel_1, GroupLayout.PREFERRED_SIZE, 189, GroupLayout.PREFERRED_SIZE)
							.addGap(17)))
					.addPreferredGap(ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
					.addComponent(scrollPane_1, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE)
					.addGap(36))
		);
		
		cbbSan = new JComboBox();
		panel.add(cbbSan);
		
		btnThoat = new JButton("Thoát");
		btnThoat.setFont(new Font("Tahoma", Font.PLAIN, 14));
		panel_1.add(btnThoat);
		
		table = new JTable();
		modelTranDau.setColumnIdentifiers(HEARD);
		table.setModel(modelTranDau);
		scrollPane_1.setViewportView(table);
		setLayout(groupLayout);
		
		Event(dbconnect);
	}
	public void Event(DBConnect dbconnect) {
		table.addMouseListener(new MouseListener() {
			
			@Override
			public void mouseReleased(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mousePressed(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mouseExited(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mouseEntered(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mouseClicked(MouseEvent e) {
				// TODO Auto-generated method stub
				row = table.getSelectedRow();
				txtMaTran.setText(modelTranDau.getValueAt(row, 0).toString());
				cbbDoi1.setSelectedItem(modelTranDau.getValueAt(row, 3).toString());
				cbbDoi2.setSelectedItem(modelTranDau.getValueAt(row, 5).toString());
				txtThoiGian.setText(modelTranDau.getValueAt(row, 1).toString());
				cbbSan.setSelectedItem(modelTranDau.getValueAt(row, 2).toString());
				if(modelTranDau.getValueAt(row, 7).toString().equals("Đã thi đấu")) {
					checkTinhTrang.setSelected(true);
					txtBanThang1.setText(modelTranDau.getValueAt(row, 4).toString());
					txtBanThang2.setText(modelTranDau.getValueAt(row, 6).toString());
				}
				else {
					checkTinhTrang.setSelected(false);
					txtBanThang1.setText("");
					txtBanThang2.setText("");
				}
			}
		});
		
		btnThem.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method 
				try {
					String tinhtrang;
					if(checkTinhTrang.isSelected()) {
						tinhtrang = "Đã thi đấu";
						modelTranDau.addRow(new String [] {txtMaTran.getText(),txtThoiGian.getText(),cbbSan.getSelectedItem().toString(),cbbDoi1.getSelectedItem().toString(),txtBanThang1.getText(),cbbDoi2.getSelectedItem().toString(),txtBanThang2.getText(),tinhtrang});	
						dbconnect.getStmt().execute("INSERT INTO TranDau VALUES('"+txtMaTran.getText()+"',N'"+cbbDoi1.getSelectedItem().toString()+"','"+txtBanThang1.getText()+"',N'"+cbbDoi2.getSelectedItem().toString()+"','"+txtBanThang2.getText()+"',N'"+tinhtrang+"',N'"+txtThoiGian.getText()+"','"+cbbSan.getSelectedItem().toString()+"',N'"+BangDau.tenBang+"',N'"+GiaiDau.maGiai+"')");
					}
					else {
						tinhtrang = "";
						modelTranDau.addRow(new String [] {txtMaTran.getText(),txtThoiGian.getText(),cbbSan.getSelectedItem().toString(),cbbDoi1.getSelectedItem().toString(),txtBanThang1.getText(),cbbDoi2.getSelectedItem().toString(),txtBanThang2.getText(),tinhtrang});	
						dbconnect.getStmt().execute("INSERT INTO TranDau VALUES('"+txtMaTran.getText()+"',N'"+cbbDoi1.getSelectedItem().toString()+"',"+null+",N'"+cbbDoi2.getSelectedItem().toString()+"',"+null+",N'"+tinhtrang+"',N'"+txtThoiGian.getText()+"','"+cbbSan.getSelectedItem().toString()+"',N'"+BangDau.tenBang+"',N'"+GiaiDau.maGiai+"')");
					}
					txtMaTran.setText("");
					txtThoiGian.setText("");
					txtBanThang1.setText("");
					txtBanThang2.setText("");
					checkTinhTrang.setSelected(false);
					} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}

			}
		});
		
		btnXoa.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				try {
					dbconnect.getStmt().execute("DELETE FROM TranDau WHERE ID='"+modelTranDau.getValueAt(row, 0).toString()+"'");
					modelTranDau.removeRow(row);
					txtMaTran.setText("");
					txtThoiGian.setText("");
					txtBanThang1.setText("");
					txtBanThang2.setText("");
					checkTinhTrang.setSelected(false);
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		});
		btnCapNhat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				try {
					if(checkTinhTrang.isSelected()) {
						dbconnect.getStmt().execute("UPDATE TranDau SET doi1=N'"+cbbDoi1.getSelectedItem().toString()+"',banthang1='"+txtBanThang1.getText()+
							"',doi2='"+cbbDoi2.getSelectedItem().toString()+"',banthang2='"+txtBanThang2.getText()+"',tinhtrang=N'Đã thi đấu',thoigian='"+txtThoiGian.getText()+"',san=N'"+cbbSan.getSelectedItem().toString()+"',BangDau=N'"+BangDau.tenBang+"' WHERE ID='"+modelTranDau.getValueAt(row, 0).toString()+"'");
						modelTranDau.setValueAt(txtBanThang1.getText(), row, 4);
						modelTranDau.setValueAt(txtBanThang2.getText(), row, 6);
						modelTranDau.setValueAt("Đã thi đấu", row, 7);
					}
					else {
						dbconnect.getStmt().execute("UPDATE TranDau SET doi1=N'"+cbbDoi1.getSelectedItem().toString()+"',banthang1="+null+
								",doi2='"+cbbDoi2.getSelectedItem().toString()+"',banthang2="+null+",tinhtrang=N'',thoigian='"+txtThoiGian.getText()+"',san=N'"+cbbSan.getSelectedItem().toString()+"',BangDau=N'"+BangDau.tenBang+"' WHERE ID='"+modelTranDau.getValueAt(row, 0).toString()+"'");
						modelTranDau.setValueAt("", row, 4);
						modelTranDau.setValueAt("", row, 6);
						modelTranDau.setValueAt("", row, 7);
					}
					modelTranDau.setValueAt(txtThoiGian.getText(), row, 1);
					modelTranDau.setValueAt(cbbSan.getSelectedItem().toString(), row, 2);
					modelTranDau.setValueAt(cbbDoi1.getSelectedItem().toString(), row, 3);
					modelTranDau.setValueAt(cbbDoi2.getSelectedItem().toString(), row, 5);
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		});
	}
}
